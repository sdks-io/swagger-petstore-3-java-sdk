/*
 * SwaggerPetstoreOpenAPI30Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.swagger.petstore3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Pet type.
 */
public class Pet {
    private String name;
    private List<String> photoUrls;
    private Long id;
    private Category category;
    private List<Tag> tags;
    private PetStatusEnum petStatus;

    /**
     * Default constructor.
     */
    public Pet() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  photoUrls  List of String value for photoUrls.
     * @param  id  Long value for id.
     * @param  category  Category value for category.
     * @param  tags  List of Tag value for tags.
     * @param  petStatus  PetStatusEnum value for petStatus.
     */
    public Pet(
            String name,
            List<String> photoUrls,
            Long id,
            Category category,
            List<Tag> tags,
            PetStatusEnum petStatus) {
        this.name = name;
        this.photoUrls = photoUrls;
        this.id = id;
        this.category = category;
        this.tags = tags;
        this.petStatus = petStatus;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for PhotoUrls.
     * @return Returns the List of String
     */
    @JsonGetter("photoUrls")
    public List<String> getPhotoUrls() {
        return photoUrls;
    }

    /**
     * Setter for PhotoUrls.
     * @param photoUrls Value for List of String
     */
    @JsonSetter("photoUrls")
    public void setPhotoUrls(List<String> photoUrls) {
        this.photoUrls = photoUrls;
    }

    /**
     * Getter for Id.
     * @return Returns the Long
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Long
     */
    @JsonSetter("id")
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for Category.
     * @return Returns the Category
     */
    @JsonGetter("category")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Category getCategory() {
        return category;
    }

    /**
     * Setter for Category.
     * @param category Value for Category
     */
    @JsonSetter("category")
    public void setCategory(Category category) {
        this.category = category;
    }

    /**
     * Getter for Tags.
     * @return Returns the List of Tag
     */
    @JsonGetter("tags")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Tag> getTags() {
        return tags;
    }

    /**
     * Setter for Tags.
     * @param tags Value for List of Tag
     */
    @JsonSetter("tags")
    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }

    /**
     * Getter for PetStatus.
     * pet status in the store
     * @return Returns the PetStatusEnum
     */
    @JsonGetter("petStatus")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PetStatusEnum getPetStatus() {
        return petStatus;
    }

    /**
     * Setter for PetStatus.
     * pet status in the store
     * @param petStatus Value for PetStatusEnum
     */
    @JsonSetter("petStatus")
    public void setPetStatus(PetStatusEnum petStatus) {
        this.petStatus = petStatus;
    }

    /**
     * Converts this Pet into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Pet [" + "name=" + name + ", photoUrls=" + photoUrls + ", id=" + id + ", category="
                + category + ", tags=" + tags + ", petStatus=" + petStatus + "]";
    }

    /**
     * Builds a new {@link Pet.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Pet.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, photoUrls)
                .id(getId())
                .category(getCategory())
                .tags(getTags())
                .petStatus(getPetStatus());
        return builder;
    }

    /**
     * Class to build instances of {@link Pet}.
     */
    public static class Builder {
        private String name;
        private List<String> photoUrls;
        private Long id;
        private Category category;
        private List<Tag> tags;
        private PetStatusEnum petStatus;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  photoUrls  List of String value for photoUrls.
         */
        public Builder(String name, List<String> photoUrls) {
            this.name = name;
            this.photoUrls = photoUrls;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for photoUrls.
         * @param  photoUrls  List of String value for photoUrls.
         * @return Builder
         */
        public Builder photoUrls(List<String> photoUrls) {
            this.photoUrls = photoUrls;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Long value for id.
         * @return Builder
         */
        public Builder id(Long id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for category.
         * @param  category  Category value for category.
         * @return Builder
         */
        public Builder category(Category category) {
            this.category = category;
            return this;
        }

        /**
         * Setter for tags.
         * @param  tags  List of Tag value for tags.
         * @return Builder
         */
        public Builder tags(List<Tag> tags) {
            this.tags = tags;
            return this;
        }

        /**
         * Setter for petStatus.
         * @param  petStatus  PetStatusEnum value for petStatus.
         * @return Builder
         */
        public Builder petStatus(PetStatusEnum petStatus) {
            this.petStatus = petStatus;
            return this;
        }

        /**
         * Builds a new {@link Pet} object using the set fields.
         * @return {@link Pet}
         */
        public Pet build() {
            return new Pet(name, photoUrls, id, category, tags, petStatus);
        }
    }
}
